name: Main

on:
  push:
    branches:
      - "master"

jobs:
  test_frontend_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Test frontend
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo ::set-output name=action_shortsha::$(echo ${GITHUB_SHA} | cut -c1-8)
        id: SHORT_SHA
        name: Set short SHA
      - run: echo ::set-output name=action_branch::${GITHUB_REF##*/}
        id: BRANCH
        name: Set branch
      - name: yarn build and test
        working-directory: client/app
        env:
          NODE_ENV: production
          REACT_APP_API_URL: test
          REACT_APP_APP_SHORTSHA: ${{ steps.SHORT_SHA.outputs.action_shortsha }}
          REACT_APP_APP_BRANCH: ${{ steps.BRANCH.outputs.action_branch }}
          REACT_APP_URL: https://encrynote.safidev.de
          CI: false
        run: |
          yarn install --production=false
          yarn lint
          yarn build
          yarn test

  test_functions_job:
    runs-on: ubuntu-latest
    name: Test functions
    strategy:
      fail-fast: true
      matrix:
        function:
          [
            { functionName: "create_note" },
            { functionName: "read_note" },
            { functionName: "delete_note" },
          ]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/function-test
        id: functionToTest
        with:
          FUNCTION_NAME: ${{ matrix.function.functionName }}
          CONFIG_FILE_BASE64: ${{ secrets.CONFIG_FILE_BASE64 }}"
  deployBackend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    needs:
      - test_functions_job
      - test_frontend_job
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - run: echo ::set-output name=action_shortsha::$(echo ${GITHUB_SHA} | cut -c1-8)
        id: SHORT_SHA
        name: Set short SHA
      - run: echo ::set-output name=action_branch::${GITHUB_REF##*/}
        id: BRANCH
        name: Set branch
      - uses: ./.github/actions/deploy
        id: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          STAGE: prod
          BRANCH: ${{ steps.BRANCH.outputs.action_branch }}
          SHORT_SHA: ${{ steps.SHORT_SHA.outputs.action_shortsha }}
          CONFIG_FILE_BASE64: ${{ secrets.CONFIG_FILE_BASE64 }}"

  deployFrontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend
    needs:
      - deployBackend
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: echo ::set-output name=action_shortsha::$(echo ${GITHUB_SHA} | cut -c1-8)
        id: SHORT_SHA
        name: Set short SHA
      - run: echo ::set-output name=action_branch::${GITHUB_REF##*/}
        id: BRANCH
        name: Set branch
      - name: yarn build and test
        working-directory: client/app
        env:
          NODE_ENV: production
          REACT_APP_API_URL: https://23wn3wdxo8.execute-api.eu-central-1.amazonaws.com/prod/api/
          REACT_APP_APP_SHORTSHA: ${{ steps.SHORT_SHA.outputs.action_shortsha }}
          REACT_APP_APP_BRANCH: ${{ steps.BRANCH.outputs.action_branch }}
          REACT_APP_URL: https://encrynote.safidev.de
          CI: false
        run: |
          yarn install --production
          yarn build
      - uses: jakejarvis/s3-sync-action@master
        name: s3-sync
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-central-1"
          SOURCE_DIR: "client/app/build"
    # - name: Invalidate CloudFront
    #   uses: chetan/invalidate-cloudfront-action@v2
    #   env:
    #     DISTRIBUTION: ${{ secrets.CF_DISTRIBUTION }}
    #     PATHS: "/*"
    #     AWS_REGION: 'eu-central-1'
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
